// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: shared/proto/worker/worker.proto

package workerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// registratorin of workers
type WorkerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Region        string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	mi := &file_shared_proto_worker_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_worker_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_shared_proto_worker_worker_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WorkerInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WorkerInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// response from registration of worker
type RegisterAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAck) Reset() {
	*x = RegisterAck{}
	mi := &file_shared_proto_worker_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAck) ProtoMessage() {}

func (x *RegisterAck) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_worker_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAck.ProtoReflect.Descriptor instead.
func (*RegisterAck) Descriptor() ([]byte, []int) {
	return file_shared_proto_worker_worker_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_shared_proto_worker_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_worker_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_worker_worker_proto_rawDescGZIP(), []int{2}
}

func (x *PingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	mi := &file_shared_proto_worker_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_worker_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_worker_worker_proto_rawDescGZIP(), []int{3}
}

func (x *PongResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

var File_shared_proto_worker_worker_proto protoreflect.FileDescriptor

const file_shared_proto_worker_worker_proto_rawDesc = "" +
	"\n" +
	" shared/proto/worker/worker.proto\x12\x06worker\"X\n" +
	"\n" +
	"WorkerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\"A\n" +
	"\vRegisterAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x1d\n" +
	"\vPingRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"(\n" +
	"\fPongResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy2w\n" +
	"\rWorkerService\x123\n" +
	"\bRegister\x12\x12.worker.WorkerInfo\x1a\x13.worker.RegisterAck\x121\n" +
	"\x04Ping\x12\x13.worker.PingRequest\x1a\x14.worker.PongResponseB?Z=github.com/Blacktreein/Blacktree/shared/proto/worker;workerpbb\x06proto3"

var (
	file_shared_proto_worker_worker_proto_rawDescOnce sync.Once
	file_shared_proto_worker_worker_proto_rawDescData []byte
)

func file_shared_proto_worker_worker_proto_rawDescGZIP() []byte {
	file_shared_proto_worker_worker_proto_rawDescOnce.Do(func() {
		file_shared_proto_worker_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_proto_worker_worker_proto_rawDesc), len(file_shared_proto_worker_worker_proto_rawDesc)))
	})
	return file_shared_proto_worker_worker_proto_rawDescData
}

var file_shared_proto_worker_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_shared_proto_worker_worker_proto_goTypes = []any{
	(*WorkerInfo)(nil),   // 0: worker.WorkerInfo
	(*RegisterAck)(nil),  // 1: worker.RegisterAck
	(*PingRequest)(nil),  // 2: worker.PingRequest
	(*PongResponse)(nil), // 3: worker.PongResponse
}
var file_shared_proto_worker_worker_proto_depIdxs = []int32{
	0, // 0: worker.WorkerService.Register:input_type -> worker.WorkerInfo
	2, // 1: worker.WorkerService.Ping:input_type -> worker.PingRequest
	1, // 2: worker.WorkerService.Register:output_type -> worker.RegisterAck
	3, // 3: worker.WorkerService.Ping:output_type -> worker.PongResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shared_proto_worker_worker_proto_init() }
func file_shared_proto_worker_worker_proto_init() {
	if File_shared_proto_worker_worker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_proto_worker_worker_proto_rawDesc), len(file_shared_proto_worker_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_proto_worker_worker_proto_goTypes,
		DependencyIndexes: file_shared_proto_worker_worker_proto_depIdxs,
		MessageInfos:      file_shared_proto_worker_worker_proto_msgTypes,
	}.Build()
	File_shared_proto_worker_worker_proto = out.File
	file_shared_proto_worker_worker_proto_goTypes = nil
	file_shared_proto_worker_worker_proto_depIdxs = nil
}
