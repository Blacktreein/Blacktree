syntax = "proto3";


package job;
option go_package = "github.com/Blacktreein/Blacktree/shared/proto/job;jobpb";


// message sent from orchestrator 
message JobRequest{
    string jobId = 1;               // unique tracking id for job
    string repoUrl = 2;             // github repo to clone
    string branch = 3;              // branch of the repo to be cloned
    string dockerfilePath = 4;      // docker file path to build the image
    string contextDir = 5;          // context dir path
    string imageName = 6;           // image name to be set
    string githubToken =7;          // github token to clone private repo
}


// returned by the worker to orhcestrator 
message JobResponse{
    string jobId = 1;                
    bool success = 2;
    string logs = 3;               // logs (stdout/stderr during build)
    string imageUrl = 4;           // full ECR image url
    string error = 5;              // error message if any
}

// --- Worker status can be BUSY or FREE ---
enum WorkerStatus {
  UNKNOWN = 0;
  FREE = 1;
  BUSY = 2;
}


// Ping mechanism to check worker state
message PingResponse {
  string workerId = 1;
  WorkerStatus status = 2;
}


message PingRequest {}


// gRPC service definition
service JobService{
    rpc RunJob(JobRequest) returns (JobResponse);
    rpc Ping(PingRequest) returns (PingResponse);
}